# Courses <span class="deprecation-warning">(Deprecated)</span>

## List Courses

```shell
curl -u "SUBDOMAIN:API_KEY" "https://api.lessonly.com/api/v1/courses"
```

> The above command returns JSON structured like this:

```json
{
  "type": "courses",
  "courses":[
    {
      "id": 1,
      "title": "Course 1",
      "archived_at": null,
      "archived_by_user_id": null
    },
    {
      "id": 2,
      "title": "Course 2",
      "archived_at": null,
      "archived_by_user_id": null
    }
  ]
}
```

This endpoint retrieves all courses.

### HTTP Request

`GET https://api.lessonly.com/api/v1/courses`

## Show Course Details

```shell
curl -u "SUBDOMAIN:API_KEY" "https://api.lessonly.com/api/v1/courses/:course_id
```

> The above command returns JSON structured like this:

```json
{
  "type": "course",
  "resource_type": "course",
  "id": 1,
  "title": "Course 1",
  "assignees_count": 10,
  "completed_count": 4,
  "description": "Test Description of Course 1",
  "lessons": [
    {
      "id": 1,
      "title": "First Lesson"
    },
    {
      "id": 2,
      "title": "Second Lesson"
    }
  ],
  "public": false,
  "created_at": "2020-09-30T00:00:00Z",
  "last_updated_at": "2020-09-30T00:00:00Z",
  "tags" : [
    {
      "id": 1,
      "name": "test_tag",
      "resource_type": "tag"
    }
  ],
  "links": {
    "overview": "https://mycompany.lessonly.com/lessons/48804-course-1",
    "shareable": "https://mycompany.lessonly.com/lesson/48804-course-1"
  },
  "archived_at": null,
  "archived_by_user_id": null
}
```

This endpoint retrieves all the courses details including their lessons and some other statistics about the completion of the course and its assignees.

### HTTP Request

`GET https://api.lessonly.com/api/v1/courses/:course_id`

### Query Parameters

Parameter | Required | Type |  Description
--- | --- | --- | ---
course_id | yes | Positive Integer | The course to access.  The company must have access to the course.

## Show Course Details (v1.1)

```shell
curl -u "SUBDOMAIN:API_KEY" "https://api.lessonly.com/api/v1.1/courses/:course_id"
```


```json
{
  "type": "course",
  "resource_type": "course",
  "id": 1,
  "owner_id": 12,
  "title": "Course 1",
  "description": "Test Description of Course 1",
  "lessons": [
    {
      "id": 1,
      "title": "First Lesson"
    },
    {
      "id": 1,
      "title": "Second Lesson"
    }
  ]
}
```

This endpoint retrieves all the details of the course, including its lessons. For completed assignments information, please see [Completed Course Assignments](#course-assignments-completed-(v1.1)).

### HTTP Request

`GET https://api.lessonly.com/api/v1/courses/:course_id`

### Query Parameters

Paramter | Required | Type |  Description
--- | --- | --- | ---
course_id | yes | Positive Integer | The course to access.  The company must have access to the course.

## Archive Course

```shell
<%= put_request("/courses/:course_id/archive") %>
```

> The above command returns JSON structured like this:
```json
  {
    "archived_at": "2016-10-13T09:51:13.549-04:00",
    "archived_by_user_id": null,
    "assignees_count": 4,
    "completed_count": 0,
    "created_at": "2016-04-30T15:23:12Z",
    "description": "",
    "id": 3934,
    "last_updated_at": null,
    "lessons": [
      {
        "id": 1,
        "title": "First Lesson"
      },
      {
        "id": 1,
        "title": "Second Lesson"
      }
    ],
    "links": {
      "overview": "https://mycompany.lessonly.com/courses/3934-empty-course",
      "shareable": "https://mycompany.lessonly.com/course/3934-empty-course"
    },
    "public": false,
    "resource_type": "course",
    "tags": [
      {
        "id": 1,
        "name": "test_tag"
      }
    ],
    "title": "Empty Course",
    "type": "course"
}
```

This endpoint allows the archiving of a single course.

### HTTP Request

`PUT https://api.lessonly.com/api/v1/courses/:course_id/archive`

### Query Parameters

Parameter | Required | Type |  Description
--- | --- | --- | ---
course_id | yes | Positive Integer | The course to archive.  The company must have access to the course.

## Restore Course

```shell
<%= put_request("/courses/:course_id/restore") %>
```

> The above command returns JSON structured like this:

```json
{
    "archived_at": null,
    "archived_by_user_id": null,
    "assignees_count": 4,
    "completed_count": 0,
    "created_at": "2016-04-30T15:23:12Z",
    "description": "",
    "id": 3934,
    "last_updated_at": null,
    "lessons": [
      {
        "id": 1,
        "title": "First Lesson"
      },
      {
        "id": 1,
        "title": "Second Lesson"
      }
    ],
    "links": {
      "overview": "https://mycompany.lessonly.com/courses/3934-empty-course",
      "shareable": "https://mycompany.lessonly.com/course/3934-empty-course"
    },
    "public": false,
    "resource_type": "course",
    "tags": [
      {
        "id": 1,
        "name": "test_tag"
      }
    ],
    "title": "Empty Course",
    "type": "course"
}
```

This endpoint allows the restoring of a single archived course.

### HTTP Request

`PUT https://api.lessonly.com/api/v1/courses/:course_id/restore`

### Query Parameters

Parameter | Required | Type |  Description
--- | --- | --- | ---
course_id | yes | Positive Integer | The course to restore.  The company must have access to the course.

## Course Assignments

```shell
curl -u "SUBDOMAIN:API_KEY" "https://api.lessonly.com/api/v1/courses/:course_id/assignments
```

> The above command returns JSON structured like this:

```json
{
  "type": "course_assignments",
  "total_assignments": 2000,
  "page": 1,
  "per_page": 2,
  "total_pages": 1000,
  "assignments":[
    {
      "id": 1,
      "resource_type": "assignment",
      "assignee_id": 1,
      "assignable_type": "Course",
      "assignable_id": 1,
      "ext_uid": "ABC123",
      "due_by": "2020-09-30T00:00:00Z",
      "assigned_at": "2020-03-20T00:00:00Z",
      "reassigned_at": "2020-09-30T00:00:00Z",
      "status": "Completed",
      "started_at": "2016-03-28T14:15:17Z",
      "completed_at": "2016-03-28T18:20:06Z",
      "updated_at": "2016-03-28T18:20:06Z"
    },
    {
      "id": 2,
      "resource_type": "assignment",
      "assignee_id": 2,
      "assignable_type": "Course",
      "assignable_id": 1,
      "ext_uid": "DEF456",
      "due_by": "2020-09-30T00:00:00Z",
      "reassigned_at": "2020-09-30T00:00:00Z",
      "status": "Incomplete",
      "started_at": "2016-03-28T14:15:17Z",
      "completed_at": null,
      "updated_at": "2016-03-28T18:20:06Z"
    }
  ]
}
```

This endpoint retrieves all the assignments for a particular course.

### HTTP Request

`GET https://api.lessonly.com/api/v1/courses/:course_id/assignments`

### Query Parameters

Parameter | Required | Type |  Description
--- | --- | --- | ---
course_id | yes | Positive Integer | The course to access.  The company must have access to the lesson.
<%= pagination_query_params.chomp %>

## Course Assignments Completed (v1.1)

```shell
curl -u "SUBDOMAIN:API_KEY" "https://api.lessonly.com/api/v1.1/courses/:course_id/assignments/completed
```

> The above command returns JSON structured like this:

```json
{
  "type": "course_assignments_completed",
  "completed_count": 12
}
```

This endpoint retrieves the count of completed assignments for a particular course.

### HTTP Request

`GET https://api.lessonly.com/api/v1.1/courses/:course_id/assignments`


## Assign Course

```shell
<%= put_request("/courses/:course_id/assignments", params: true) %>
```

> The following are sample parameters for this request:

```json
{
  "assignments":[
    {
      "assignee_id": 1,
      "due_by": "2020-09-30T00:00:00Z",
      "notify": false
    }
  ]
}

```

> A successful update returns JSON formatted version of the assignments made

```json
{
  "type": "update_course_assignments",
  "assignments": [
    {
      "id": 1,
      "resource_type": "assignment",
      "assignee_id": 1,
      "assignable_type": "Course",
      "assignable_id": 3,
      "ext_uid": "ABC123",
      "due_by": "2020-09-30T00:00:00Z",
      "reassigned_at": "2020-09-30T00:00:00Z",
      "completed_at": "2020-09-30T00:00:00Z",
      "status": "Incomplete",
      "score": null
    }
  ]
}
```

This endpoint allows you to make assignments to a particular course in the API.

### HTTP Request

`PUT https://api.lessonly.com/api/v1/courses/:course_id/assignments -d params`

### Query Parameters

Parameter | Required | Type |  Description
--- | --- | --- | ---
course_id | yes | Positive Integer | The course to access. The company must have access to the user.
assignments | no | Hash | A hash of assignments to be made to the course.  If the assignment for a particular user already exists, the user will be reassigned the course (only completed assignments will be reassigned). By default, an email will be sent to the assignee; it will come from notifications@lessonly.com. To suppress the email notification set `notify` to `false`.
