# Lessons

## List Lessons

```shell
<%= api_get_request('/lessons') %>
```

> The above command returns JSON structured like this:

```json
{
  "type": "lessons",
  "lessons": [
      {
        "id": 30976,
        "title": "Lesson 3",
        "archived_at": "2016-08-08T10:49:37.676-04:00",
        "archived_by_user_id": 1735
      },
      {
        "id": 94861,
        "title": "Trent - Kendra Scott",
        "archived_at": "2018-02-10T15:38:51.014-05:00",
        "archived_by_user_id": 78
      }
  ]
}
```

This endpoint retrieves all lessons.

### HTTP Request

`GET https://api.lessonly.com/api/v1/lessons`

## List Lessons (v1.1)

```shell
<%= api_get_request('/lessons', 'v1.1') %>
```

> The above command returns JSON structured like this:

```json
{
  "type": "lessons",
  "lessons": [
    {
      "id": 1,
      "resource_type": "lesson",
      "title": "First Lesson",
      "archived_at": null,
      "archived_by_user_id": null,
      "retake_score": 80,
      "public": false,
      "created_at": "2020-09-30T00:00:00Z",
      "last_updated_at": "2020-09-30T00:00:00Z",
      "tags": [
        {
          "id": 1,
          "name": "test_tag",
          "resource_type": "tag"
        }
      ],
      "links": {
        "overview": "https://mycompany.lessonly.com/lessons/1-first-lesson"
      }
    },
    {
      "id": 2,
      "resource_type": "lesson",
      "title": "Second Lesson",
      "archived_at": null,
      "archived_by_user_id": null,
      "retake_score": 95,
      "public": true,
      "created_at": "2020-09-30T00:00:00Z",
      "last_updated_at": "2020-09-30T00:00:00Z",
      "tags": [
        {
          "id": 1,
          "name": "test_tag",
          "resource_type": "tag"
        }
      ],
      "links": {
        "overview": "https://mycompany.lessonly.com/lessons/2-second-lesson",
        "shareable": "https://mycompany.lessonly.com/lesson/2-second-lesson"
      }
    }
  ]
}
```

This endpoint retrieves all lessons.

### HTTP Request

`GET https://api.lessonly.com/api/v1.1/lessons`


## Show Lesson Details

```shell
<%= api_get_request('/lessons/:lesson_id') %>
```

> The above command returns JSON structured like this:

```json
{
  "id": 1,
  "type": "lesson",
  "resource_type": "lesson",
  "title": "Lesson 1",
  "assignees_count": 10,
  "completed_count": 5,
  "retake_score": 80,
  "description": "just another lesson",
  "public": false,
  "created_at": "2020-09-30T00:00:00Z",
  "last_updated_at": "2020-09-30T00:00:00Z",
  "tags": [
    {
      "id": 1,
      "name": "test_tag",
      "resource_type": "tag"
    }
  ],
  "links": {
    "overview": "https://mycompany.lessonly.com/lessons/1-lesson-1",
    "shareable": "https://mycompany.lessonly.com/lesson/1-lesson-1"
  },
  "archived_at": null,
  "archived_by_user_id": null
}
```

This endpoint retrieves all the lesson details including statistics about the completion of the lesson.
### HTTP Request

`GET https://api.lessonly.com/api/v1/lessons/:lesson_id`

## Show Lesson Details (v1.1)

```shell
<%= api_get_request('/lessons/:lesson_id', 'v1.1') %>
```

> The above command returns JSON structured like this:

```json
{
  "id": 1,
  "type": "lesson",
  "resource_type": "lesson",
  "title": "Lesson 1",
  "retake_score": 80,
  "description": "just another lesson",
  "public": false,
  "created_at": "2020-09-30T00:00:00Z",
  "last_updated_at": "2020-09-30T00:00:00Z",
  "tags": [
    {
      "id": 1,
      "resource_type": "tag",
      "name": "test_tag"
    }
  ],
  "links": {
    "shareable": "https://lesson-link",
    "overview": "https://lesson-link"
  },
  "archived_at": "2016-08-12T08:54:52.982-04:00",
  "archived_by_user_id": 78
}
```

This endpoint retrieves the lesson's information. For a count of completed assignments, please see [Lesson Completed Assignments](#lesson-completed-assignments-(v1.1)).
### HTTP Request

`GET https://api.lessonly.com/api/v1.1/lessons/:lesson_id`


## Update Lesson

```shell
<%= put_request('/lessons/:lesson_id', params: true) %>
-d '{
  "title": "Untitled Lesson",
  "retake_score": "80",
  "public": true
}'
```

> The above command returns JSON structured like this:

```json
{
  "type": "update_lesson",
  "resource_type": "lesson",
  "id": 1,
  "title": "Untitled Lesson",
  "description": "just another lesson",
  "assignees_count": 10,
  "completed_count": 5,
  "retake_score": 80,
  "public": true,
  "created_at": "2020-09-30T00:00:00Z",
  "last_updated_at": "2020-09-30T00:00:00Z",
  "archived_at": null,
  "archived_by_user_id": null,
  "tags": [
    {
      "id": 1,
      "name": "test_tag"
    }
  ],
  "links": {
    "overview": "https://mycompany.lessonly.com/lessons/1-lesson-1",
    "shareable": "https://mycompany.lessonly.com/lesson/1-lesson-1"
  }
}
```

This endpoint allows the updating of a single lesson and its attributes.

### HTTP Request

`PUT https://api.lessonly.com/api/v1/lessons/:lesson_id -d params`

### Query Parameters

Parameter | Required | Type |  Description
--- | --- | --- | ---
lesson_id | yes | Positive Integer | The lesson to access.  The company must have access to the lesson.
title | no | String | The title of the lesson.
retake_score | no | Positive Integer | The retake score of the lesson.
public | no | Boolean | Whether or not the lesson is public

## Archive Lesson

```shell
<%= put_request("/lessons/:lesson_id/archive").chomp(' \\') %>
```

> The above command returns JSON structured like this:

```json
{
    "id": 43530,
    "title": "Untitled Lesson",
    "type": "lesson",
    "archived_at": "2016-10-12T16:12:09.850-04:00",
    "archived_by_user_id": null,
    "assignees_count": 0,
    "completed_count": 0,
    "created_at": "2016-10-06T16:09:41Z",
    "description": null,
    "last_updated_at": "2016-10-06T16:18:01Z",
    "links": {
      "overview": "https://mycompany.lessonly.com/lessons/43530-untitled-lesson",
      "shareable": "https://mycompany.lessonly.com/lesson/43530-untitled-lesson"
    },
    "public": false,
    "resource_type": "lesson",
    "retake_score": 90,
    "tags": [
      {
        "id": 1,
        "name": "test_tag",
        "resource_type": "tag"
      }
    ]
}
```

This endpoint allows the archiving of a single lesson.

### HTTP Request

`PUT https://api.lessonly.com/api/v1/lessons/:lesson_id/archive`

### Query Parameters

Parameter | Required | Type |  Description
--- | --- | --- | ---
lesson_id | yes | Positive Integer | The lesson to archive.  The company must have access to the lesson.

## Restore Lesson

```shell
<%= put_request("/lessons/:lesson_id/restore").chomp(' \\') %>
```

> The above command returns JSON structured like this:

```json
{
    "id": 43530,
    "title": "Untitled Lesson",
    "type": "lesson",
    "archived_at": null,
    "archived_by_user_id": null,
    "assignees_count": 0,
    "completed_count": 0,
    "created_at": "2016-10-06T16:09:41Z",
    "description": null,
    "last_updated_at": "2016-10-06T16:18:01Z",
    "links": {
      "overview": "https://mycompany.lessonly.com/lessons/43530-untitled-lesson",
      "shareable": "https://mycompany.lessonly.com/lesson/43530-untitled-lesson"
    },
    "public": false,
    "resource_type": "lesson",
    "retake_score": 90,
    "tags": [
      {
        "id": 1,
        "name": "test_tag",
        "resource_type": "tag"
      }
    ]
}
```

This endpoint allows the restoring of a single archived lesson.

### HTTP Request

`PUT https://api.lessonly.com/api/v1/lessons/:lesson_id/restore`

### Query Parameters

Parameter | Required | Type |  Description
--- | --- | --- | ---
lesson_id | yes | Positive Integer | The lesson to restore.  The company must have access to the lesson.

## Lesson Assignments

```shell
<%= api_get_request('/lessons/:lesson_id/assignments') %>
```

> The above command returns JSON structured like this:

```json
{
  "type": "lesson_assignments",
  "total_assignments": 2000,
  "page": 1,
  "per_page": 2,
  "total_pages": 1000,
  "assignments":[
    {
      "id": 1,
      "resource_type": "assignment",
      "assignee_id": 1,
      "assignable_type": "Lesson",
      "assignable_id": 12,
      "ext_uid": "ABC123",
      "due_by": "2020-09-30T00:00:00Z",
      "assigned_at": "2020-03-20T00:00:00Z",
      "reassigned_at": "2020-09-30T00:00:00Z",
      "started_at": "2018-04-19T14:00:41Z",
      "completed_at": "2020-09-30T00:00:00Z",
      "updated_at": "2020-09-30T00:00:00Z",
      "status": "Completed",
      "score": 20
    },
    {
      "id": 2,
      "resource_type": "assignment",
      "assignee_id": 2,
      "assignable_type": "Lesson",
      "assignable_id": 15,
      "ext_uid": "DEF456",
      "due_by": "2020-09-30T00:00:00Z",
      "reassigned_at": "2020-09-30T00:00:00Z",
      "started_at": "2018-04-19T14:00:41Z",
      "completed_at": null,
      "updated_at": "2020-09-30T00:00:00Z",
      "status": "Incomplete",
      "score": null
    }
  ]
}
```

This endpoint retrieves all the assignments for a particular lesson.
### HTTP Request

`GET https://api.lessonly.com/api/v1/lessons/:lesson_id/assignments`

### Query Parameters

Parameter | Required | Type |  Description
--- | --- | --- | ---
lesson_id | yes | Positive Integer | The lesson to access.  The company must have access to the lesson.
<%= pagination_query_params.chomp %>

<aside class="notice">
  Lesson assignments are only counted when that particular lesson is assigned. If a lesson is contained in a path and the path is assigned, the lesson is not counted as assigned.
</aside>

## Lesson Completed Assignments (v1.1)

```shell
<%= api_get_request('/lessons/:lesson_id/assignments/completed', 'v1.1') %>
```

> The above command returns JSON structured like this:

```json
{
  "type": "lesson_assignments_completed",
  "completed_count": 13
}
```

This endpoint retrieves the number of completed assignments for a given lesson.

### HTTP Request

`GET https://api.lessonly.com/api/v1.1/lessons/:lesson_id/assignments/completed`

<aside class="notice">
  We only count a lesson as assigned if the individual lesson was assigned. We do not count a lesson as assigned if it was part of a path.
</aside>

## Assign Lesson

```shell
<%= put_request("/lessons/:lesson_id/assignments", params: true) %>
-d '{
  "assignments": [
    {
      "assignee_id": 1,
      "due_by": "2020-09-30T00:00:00Z",
      "notify": false
    }
  ]
}'
```

> A successful update returns JSON formatted version of the assignments made

```json
{
  "type": "update_lesson_assignments",
  "assignments": [
    {
      "id": 1,
      "resource_type": "assignment",
      "assignee_id": 1,
      "assignable_type": "Lesson",
      "assignable_id": 3,
      "ext_uid": "ABC123",
      "due_by": "2020-09-30T00:00:00Z",
      "reassigned_at": "2020-09-30T00:00:00Z",
      "completed_at": "2020-09-30T00:00:00Z",
      "updated_at": "2020-09-30T00:00:00Z",
      "status": "Incomplete",
      "score": null
    }
  ]
}
```

This endpoint allows you to make assignments to a particular lesson in the API.

### HTTP Request

`PUT https://api.lessonly.com/api/v1/lessons/:lesson_id/assignments -d params`

### Query Parameters

Parameter | Required | Type |  Description
--- | --- | --- | ---
lesson_id | yes | Positive Integer | The lesson to access.  The company must have access to the user.
assignments | no | Hash | A hash of assignments to be made to the lesson.  If the assignment for a particular user already exists, the user will be reassigned the lesson (only completed assignments will be reassigned). By default, an email will be sent to the assignee; it will come from notifications@lessonly.com. To suppress the email notification set `notify` to `false`.
